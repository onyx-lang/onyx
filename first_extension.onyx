#load "core:onyx/compiler_extension"

use core {*}
use onyx.compiler_extension {*}

main :: () {
    ext := ExtensionContext.make("First Extension")

    ext->handle_macro("double", expand_double)
    ext->handle_macro("debug",  expand_debug)

    ext->handle_hook(.Stalled, (ext, info) => {
        #persist injected := false
        if injected do return
        injected = true

        ext->send(.{
            InjectCode = .{
                code = """
                package dummy_package
                foo :: () { println("In a new package!") }
                """
            }
        })
    })

    ext->start(message_handler)
}

expand_double :: (ext, em) => {
    return Result(str, ExpansionFailureReason).{
        Ok = tprintf("2 * ({})", em.body)
    }
}

expand_debug :: (ext, em) => {
    return Result(str, ExpansionFailureReason).{
        Ok = tprintf("logf(.Info, \"{} is {{}}\", {});", em.body, em.body)
    }
}

message_handler :: (ext, msg) => {
    switch msg {
        case .ExpandMacro as em {
            ext->send(.{
                Expansion = .{
                    id = em.id
                    code = .{ Err = .NotSupported }
                }
            })
        }

        case _ ---
    }
}

