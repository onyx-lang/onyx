package core.os

Fault_Handler :: struct {
    handle: (rawptr) -> void
    ctx: rawptr
}

register_fault_handler :: (ctx: rawptr, handle: (rawptr) -> void) {
    fault_handlers << .{ handle, ctx }

    if !global_fault_handle_registered {
        assert(__register_cleanup(#export_name global_fault_handler), "Failed to register global fault handler")
        global_fault_handle_registered = true
    }
}

#local {
    #foreign "onyx_runtime" {
        __register_cleanup :: (name: str) -> bool ---
    }

    global_fault_handler :: () {
        for fault_handlers {
            it.handle(it.ctx)
        }
    }

    fault_handlers: [..] Fault_Handler
    global_fault_handle_registered := false
}



